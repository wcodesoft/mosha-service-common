syntax = "proto3";

package quoteservice;
option go_package = "github.com/wcodesoft/mosha-quote-service/proto";

import "google/protobuf/empty.proto";

// The QuoteService service definition.
service QuoteService {
  // GetQuote returns a quote by id
  rpc GetQuote(GetQuoteRequest) returns (Quote) {}
  // ListQuotes returns a list of quotes
  rpc ListQuotes(google.protobuf.Empty) returns (ListQuotesResponse) {}
  // CreateQuote creates a new quote
  rpc CreateQuote(CreateQuoteRequest) returns (Quote) {}
  // UpdateQuote updates a quote
  rpc UpdateQuote(UpdateQuoteRequest) returns (Quote) {}
  // DeleteQuote deletes a quote
  rpc DeleteQuote(DeleteQuoteRequest) returns (DeleteQuoteResponse) {}
  // GetQuoteByAuthor returns a list of quotes by author id
  rpc GetQuotesByAuthor(GetQuotesByAuthorRequest) returns (ListQuotesResponse) {}
  // DeleteAllQuotesByAuthor deletes all quotes by author id
  rpc DeleteAllQuotesByAuthor(DeleteQuotesByAuthorRequest) returns (DeleteQuoteResponse) {}
}

// The Quote message
message Quote {
  string id = 1;
  string author_id = 2;
  string text = 3;
  int64 timestamp = 4;
}

// The GetQuoteRequest message
message GetQuoteRequest {
  string id = 1;
}

// The CreateQuoteRequest message
message CreateQuoteRequest {
  Quote quote = 1;
}

// The UpdateQuoteRequest message
message UpdateQuoteRequest {
  Quote quote = 1;
}

// The DeleteQuoteRequest message
message DeleteQuoteRequest {
  string id = 1;
}

// The GetQuoteByAuthorRequest message
message GetQuotesByAuthorRequest {
  string author_id = 1;
}

message DeleteQuotesByAuthorRequest {
  string author_id = 1;
}

// The ListQuotesResponse message
message ListQuotesResponse {
  repeated Quote quotes = 1;
}

// The DeleteQuoteResponse message
message DeleteQuoteResponse {
  bool success = 1;
}